@model devarts.Models.Finance

<div class="modal-dialog">
    <div class="modal-content">
        @using (Ajax.BeginForm("AddFinance", "Finance", new AjaxOptions
        {
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "patientList",
            LoadingElementId = "loader",
            OnSuccess = "OnSuccessOperations()",
        }, new { Id = "AddFinanceForm", autocomplete = "off" }))
        {
            @Html.AntiForgeryToken()

            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">&times;</button>
                <h3 class="modal-title" id="myModalLabel">
                    <i class="fa fa-bar-chart"></i> Nowy wydatek
                    <small>/ przychód</small>
                </h3>
            </div>
            <div class="modal-body">
                @*<div class="row">
                        <div class="col-lg-12">
                            @Html.ValidationSummary()
                        </div>
                    </div>*@
                <div class="row">
                    <div class="col-lg-12 form-horizontal">
                        <div class="form-group">
                            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Name)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.Description, new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.Description)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DateFrom, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.DateFrom, "{0:yyyy.MM.dd HH:mm}", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DateFrom)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.DateTo, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.DateTo, "{0:yyyy.MM.dd HH:mm}", new { @class = "form-control" })
                                @Html.ValidationMessageFor(model => model.DateTo)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Cathegory, new { @style = "font-weight: bold;", @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-pencil fa" aria-hidden="true"></i></span>
                                    @Html.DropDownListFor(m => Model.Cathegory, new SelectList(@ViewBag.Cathegories, "Value", "Text"), new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.Cathegory)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.Amount, htmlAttributes: new { @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                @Html.TextBoxFor(model => model.Amount, new { @class = "form-control", @type = "number", @step = "0.01", @placeholder = "W kwocie użyj przecinku zamiast kropki np. 250,50" })
                                @Html.ValidationMessageFor(model => model.Amount)
                            </div>
                        </div>

                        <div class="form-group">
                            @Html.LabelFor(model => model.CurrencyName, new { @style = "font-weight: bold;", @class = "control-label col-lg-3" })
                            <div class="col-lg-9">
                                <div class="input-group">
                                    <span class="input-group-addon"><i class="fa fa-pencil fa" aria-hidden="true"></i></span>
                                    @Html.DropDownListFor(m => Model.CurrencyName, new SelectList(@ViewBag.Currency, "Value", "Text"), new { @class = "form-control" })
                                </div>
                                @Html.ValidationMessageFor(model => model.CurrencyName)
                            </div>
                        </div>

                        <div class="col-lg-12">
                            <hr />

                            <div class="col-lg-12 pull-right" style="vertical-align:middle;">
                                @Html.CheckBoxFor(model => model.IncludeFinance, new { @class = "big-checkbox green", @checked = "checked" })
                                <b>
                                    @Html.LabelFor(model => model.IncludeFinance, new { @class = "label-checkbox big-check-box-label", @checked = "checked" })
                                </b>
                            </div>
                            <div class="col-lg-12 pull-right">
                                <hr />
                                @Html.CheckBoxFor(model => model.IsExpense, new { @class = "big-checkbox", @checked = "checked" })
                                <b>
                                    @Html.LabelFor(model => model.IsExpense, new { @class = "label-checkbox big-check-box-label red", @checked = "checked" })
                                </b>
                                <p>Wyczyść to pole jeśli pozycja jest <b class="red">przychodem</b>.</p>
                            </div>                            
                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <div class="row">
                    <div class="col-lg-12">
                        <input class="btn btn-danger" type="submit" value="Zapisz">
                        <a href="#" class="btn btn-default" data-dismiss="modal"><i class="fa fa-close"></i> Zamknij</a>
                    </div>
                </div>
            </div>
        }
    </div>
</div>

<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script type="text/javascript">
    (function ($) {
        $.validator.unobtrusive.adapters.addBool("checkboxrequired", "required");
    }(jQuery));
</script>